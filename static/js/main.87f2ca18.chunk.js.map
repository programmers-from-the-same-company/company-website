{"version":3,"sources":["Home/UsernameInput.tsx","Home/JokeQuote.tsx","Home/Home.tsx","App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["UsernameInput","useState","username","setUsername","apiResponse","setApiResponse","currentMembers","setCurrentMembers","pendingMembers","setPendingMembers","search","setSearch","isLoading","setIsLoading","apiEndpoint","sendInvitation","a","fetch","method","body","JSON","stringify","Login","then","res","status","statusText","catch","error","console","makeListItem","member","className","getMembers","extractUsername","user","login","json","active","map","pending","useEffect","SpinnerComponent","role","filterFunction","toUpperCase","includes","type","value","onChange","e","target","onClick","href","filter","SmartPeople","JokeQuote","gotJoke","setGotJoke","joke","setJoke","peep","setPeep","getRandomSmarty","min","max","length","Math","ceil","floor","random","getJoke","text","Home","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87f2ca18.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction UsernameInput() {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [apiResponse, setApiResponse] = useState(\"\");\r\n    const [currentMembers, setCurrentMembers] = useState<string[]>([]);\r\n    const [pendingMembers, setPendingMembers] = useState<string[]>([]);\r\n    const [search, setSearch] = useState(\"\")\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    const apiEndpoint = \"https://company-website-api.herokuapp.com/\";\r\n    const sendInvitation = async () => {\r\n        // Call our api to send invitation to user.\r\n        // Set api response\r\n        fetch(apiEndpoint + \"users/invite\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ Login: username })\r\n        }).then(\r\n            (res) => {\r\n                const salutation = !username || username === \"\" ? \"Hey\" : \"Hey \" + username;\r\n                setApiResponse(\r\n                    salutation + \", here is your api response: \" + res.status + \" \" + res.statusText)\r\n            }\r\n        ).catch(\r\n            (error) => console.error(error)\r\n        );\r\n    }\r\n\r\n    const makeListItem = (member: string) => {\r\n        return <li key={member}>\r\n            <div className=\"card shadow-sm my-2\">\r\n                <div className=\"card-body\">{member}</div>\r\n            </div>\r\n        </li>;\r\n    }\r\n\r\n    const getMembers = async () => {\r\n        const extractUsername = (user: any) => user.login;\r\n        fetch(apiEndpoint + \"users\").then((res) => {\r\n            return res.json();\r\n        }).then((json) => {\r\n            setCurrentMembers(json.active.map(extractUsername));\r\n            setPendingMembers(json.pending.map(extractUsername));\r\n            setIsLoading(false)\r\n        }).catch((error) => console.error(error));\r\n    }\r\n\r\n    // OnMount\r\n    useEffect(() => {\r\n        // Call api to get current members and pending members and set state\r\n        getMembers();\r\n    }, [apiResponse]);\r\n\r\n    const SpinnerComponent = (\r\n        <div className=\"spinner-grow\" role=\"status\"/>\r\n    )\r\n\r\n    const filterFunction = (member: string) => (search !== \"\"? member.toUpperCase().includes(search.toUpperCase()): true)\r\n\r\n    return (\r\n        <div className=\"container text-center\">\r\n            <h2 className=\"m-2\">\r\n                Enter your github username\r\n            </h2>\r\n\r\n            <input\r\n                type=\"text\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                className=\"form-control m-2 w-50 text-center mx-auto\"\r\n            />\r\n            <button\r\n                onClick={(e) => sendInvitation()}\r\n                className=\"btn btn-outline-success\"\r\n            >\r\n                Send Invitation\r\n            </button>\r\n\r\n            \r\n\r\n            <h3 className=\"mt-5\">{apiResponse}</h3>\r\n            <div className= \"m-2\">Please check for your name in the pending Invitations section after you have sent your invitation.</div>\r\n            <div className= \"m-2\">Click this <a href=\"https://github.com/programmers-from-the-same-company\">link</a> or check your email to accept.</div>\r\n\r\n            <div className=\"container my-4\">\r\n                <h2>Search for a username</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    value={search}\r\n                    onChange={(e) => setSearch(e.target.value)}\r\n                    className=\"form-control m-2 w-50 text-center mx-auto\"\r\n                />\r\n            </div>\r\n            \r\n            <div className=\"row m-5\">\r\n                <div className=\"col text-center\">\r\n                    <h2>Pending Invitations</h2>\r\n                    {\r\n                        isLoading ? SpinnerComponent : \r\n                        (\r\n                            <ul className=\"list-unstyled\">\r\n                                {pendingMembers.filter(filterFunction).map(makeListItem)}                     \r\n                            </ul> \r\n                        )\r\n                    }\r\n                </div>\r\n                <div className=\"col text-center\">\r\n                    <h2>Current Members</h2>\r\n                    {\r\n                        isLoading ? SpinnerComponent : \r\n                        (\r\n                            <ul className=\"list-unstyled\">\r\n                                {currentMembers.filter(filterFunction).map(makeListItem)}\r\n                            </ul>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UsernameInput;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// just some smart people I found on the web\r\n// https://www.rasmussen.edu/degrees/technology/blog/famous-computer-scientists-who-impacted-the-industry/\r\nconst SmartPeople = [\r\n    \"Barbara Liskov\",\r\n    \"Elon Musk\",\r\n    \"Larry Page\",\r\n    \"Carl Sassenrath\",\r\n    \"Guido Van Rassum\",\r\n    \"Mark Zuckerburg\",\r\n    \"Brendan Eich\",\r\n    \"Tim Berners-Lee\",\r\n    \"Hedy Lamarr\",\r\n    \"Bill Gates\"\r\n];\r\n\r\nfunction JokeQuote()\r\n{\r\n\tconst [gotJoke, setGotJoke] = useState(false);\r\n\tconst [joke, setJoke] = useState(\"\");\r\n\tconst [peep, setPeep] = useState(\"\");\r\n\t\r\n\tconst apiEndpoint = \"https://v2.jokeapi.dev/joke/Programming?format=txt&type=single\";\r\n\r\n\t// from: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random \r\n\tconst getRandomInt = (min:number, max:number) => {\r\n\t\tmin = Math.ceil(min);\r\n\t\tmax = Math.floor(max);\r\n\t\treturn Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n\t}\r\n\r\n\tconst getRandomSmarty = () => {\r\n\t\treturn SmartPeople[getRandomInt(0, SmartPeople.length)];\r\n\t}\r\n\r\n\t  \r\n\tconst getJoke = async() => {\r\n\t\tfetch(apiEndpoint)\r\n\t\t.then(res => {\r\n\t\t\tres.text()\r\n\t\t\t.then((text) => {\r\n\t\t\t\tsetJoke(text);\r\n\t\t\t\tsetPeep(getRandomSmarty());\r\n\t\t\t\tsetGotJoke(true);\r\n\t\t\t})\r\n\t\t})\r\n\t\t.catch(error => console.error(error));\t\t\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetJoke();\r\n\t},[]);\r\n\t\r\n\r\n\treturn(\r\n\t<>\r\n\t{ gotJoke &&\r\n\t\t<>\r\n\t\t\t<div>\r\n\t\t\t\t\" {joke} \"\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t- {peep}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t}\t\t\r\n\t</>);\r\n}\r\n\r\nexport default JokeQuote;\r\n","import React from 'react';\r\nimport UsernameInput from './UsernameInput';\r\nimport JokeQuote from './JokeQuote';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"container col\">\r\n      <header className=\"row align-self-center m-5\">\r\n        <h1 className=\"text-center\">\r\n          A group where we all pretend to be programmers\r\n           from the same company\r\n        </h1>\r\n        <h3 className=\"text-center fst-italic\">\r\n          <JokeQuote />\r\n        </h3>\r\n      </header>\r\n      <div className=\"row align-self-center\">\r\n          <UsernameInput/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Home from '../Home/Home';\r\nimport \"../index.css\";\r\n\r\nfunction App() {\r\n  return (<Home/>);\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}